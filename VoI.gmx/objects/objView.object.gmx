<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>viewSpeed = 20;

LEFT = vk_left;
RIGHT = vk_right;
UP = vk_up;
DOWN = vk_down;

mapSize = 200;
mapScale = 200/room_width;//0.075

WIDTH = window_get_width();
HEIGHT = window_get_height();

mapSurface = surface_create(mapSize, mapSize);
initiateSurface = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(LEFT)
{
    view_xview -= viewSpeed;
}
if keyboard_check(RIGHT)
{
    view_xview += viewSpeed;
}
if keyboard_check(UP)
{
    view_yview -= viewSpeed;
}
if keyboard_check(DOWN)
{
    view_yview += viewSpeed;
}

//Stop view from going outside room
if view_xview &lt; 0 view_xview = 0;
if view_xview + view_wview &gt; room_width view_xview = room_width - view_wview;

if view_yview &lt; 0 view_yview = 0;
if view_yview + view_hview &gt; room_height view_yview = room_height - view_hview;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var MapLeft = WIDTH - mapSize;
var MapTop = HEIGHT - mapSize;

draw_set_color(c_black);
draw_rectangle(MapLeft - 2, 0, WIDTH, HEIGHT, false);



if surface_exists(mapSurface)
{
    draw_surface(mapSurface, MapLeft, MapTop);
}
else
{
    mapSurface = surface_create(mapSize, mapSize);
    initiateSurface = 1;
}

with(objUnit)
{
    if team == TEAM_FRIENDLY draw_set_color(c_blue);
    if team == TEAM_ENEMY draw_set_color(c_red);
    
    draw_rectangle(MapLeft + x*other.mapScale - 1, MapTop + y*other.mapScale - 1, MapLeft + x*other.mapScale + 1, MapTop + y*other.mapScale + 1, false);
}

//Draw the view rectangle
draw_set_color(c_ltgray);
draw_rectangle(MapLeft + view_xview*mapScale, MapTop + view_yview*mapScale, MapLeft + (view_xview + view_wview)*mapScale, MapTop + (view_yview + view_hview)*mapScale, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if initiateSurface == 1
{
    surface_set_target(mapSurface);
    draw_clear(c_black);
    
    draw_background_tiled_ext(background_index[0],0,0,mapScale,mapScale,c_white,1);
    
    with(objEnvironment)
    {
        draw_sprite_ext(sprite_index, 0, x*other.mapScale, y*other.mapScale, other.mapScale, other.mapScale, image_angle, image_blend, image_alpha);
    }
    
    surface_reset_target();
    initiateSurface = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
