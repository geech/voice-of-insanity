<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>obj_shield</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//floor_damage = false; // So player doesn't blowup upon touching the floor
rt_spd = 5;
immune = false;


health = 10;
maxhp = health;


// SKILLS
 
powerNM[0] = "";
current_power[0] = spr_power0;

powerNM[1] = "Pullback";
current_power[1] = spr_power2;

powerNM[2] = "Pull to";
current_power[2] = spr_power1;

powerNM[3] = "Hold";
current_power[3] = spr_power3;

   // &gt;&gt; Basic cooldown
skill_cd = false;
max_cd = 330;
cd_clock = max_cd;


// &gt;&gt; Default: No skill
current_skill = 0; // 0 = no skill

ballspawn = false;
spawn_time = 0;

moving_ball = false;
check = false;
move_Ball = false;
move_Ball_time = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//image_angle = point_direction(x, y, mouse_x, mouse_y) - 90;

//show_debug_message(obj_player.immune);
// Keep the player within a 360 angle to easily measure image_angle
if (image_angle &gt; 360) { image_angle -= 360 }
if (image_angle &lt; 0) { image_angle += 360 }

//show_debug_message(obj_shield.image_angle);
// Base directions
if (keyboard_check(ord("D"))) { direction = 0; }
if (keyboard_check(ord("W")))  { direction = 90;}
if (keyboard_check(ord("A"))) { direction = 180; }
if (keyboard_check(ord("S"))) { direction = 270; }

// 8 way changes
if (keyboard_check(ord("W"))) and (keyboard_check(ord("D"))) { direction = 45;}
if (keyboard_check(ord("W"))) and (keyboard_check(ord("A"))) { direction = 135;}
if (keyboard_check(ord("S"))) and (keyboard_check(ord("A"))) { direction = 225; }
if (keyboard_check(ord("S"))) and (keyboard_check(ord("D"))) { direction = 315; }

if (keyboard_check(vk_nokey)) {
    sprite_index = spr_player_stand;
    obj_shield.sprite_index = spr_shield_stand;
}

if (keyboard_check(ord("W"))) or (keyboard_check(ord("A"))) or (keyboard_check(ord("S"))) or (keyboard_check(ord("D")))
{
    sprite_index = spr_player_walk;
    obj_shield.sprite_index = spr_shield_walk;
    if (speed &lt;6)
    {
        speed += 0.5;
    }
    //direction = image_angle +90;
}

/* // Removal of neg. speeds
if 
{
    if (speed &gt; -5)
    {
        speed -= 0.5;
    }

}*/

if (keyboard_check(ord("Q"))) or (keyboard_check(vk_left))
{
image_angle += rt_spd;
}

if (keyboard_check(ord("E"))) or (keyboard_check(vk_right))
{
image_angle -= rt_spd;
}

else 
{

    if (speed &gt; 0)
    {
    
        speed -= 0.25;
    } 
    else if (speed &lt; 0) {
        speed += 0.5;
    }
    else
    {
        speed += 0;
    }
}

if (skill_cd == false) {
if (keyboard_check(ord("0"))) {
current_skill = 0;
}

else if (keyboard_check(ord("1"))) {
current_skill = 1;
powerMenu_skill.y = powerMenu.y-2;
}

else if (keyboard_check(ord("2"))) {
current_skill = 2;
powerMenu_skill.y = powerMenu1.y-2;
}

else if (keyboard_check(ord("3"))) {
current_skill = 3;
powerMenu_skill.y = powerMenu2.y-2;
}
}

if (current_skill != 0) {
instance_activate_object(powerMenu_skill)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if obj_player.health &lt;= 0 { 
room_goto(Deaded);

show_debug_message("RIP Player");
audio_stop_all();
instance_deactivate_all(false);
 }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (skill_cd == true) {
    cd_clock -= 1

    if (cd_clock &lt;= 0) {
        skill_cd = false;
        if (current_skill == 1) { sk = powerMenu }
        if (current_skill == 2) { sk = powerMenu1 }
        if (current_skill == 3) { sk = powerMenu2 }
        with(sk){
        effect_create_above(ef_ring, x-25, y, 1, c_aqua);
        }
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (move_Ball == true) {
if (move_Ball_time &lt;= 0){
obj_ballHP.color = c_white;
obj_ball.speed = global.ball_spd;
move_Ball = false;
check = false;
with(obj_ball){
scome = false;
comeback = false;
}
exit
}
move_Ball_time -= 1;

// Set this one time, or else the ball will not move
if (check == false) {
xx = obj_ball.x - x;
yy = obj_ball.y - y;
check = true;
}

with(obj_ball){
speed = 0;
x = obj_player.x + obj_player.xx;
y = obj_player.y + obj_player.yy;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (ballspawn == true)  {
immune = true;
if (spawn_time &lt;= 70){
with (obj_ball){
move_towards_point(obj_player.x, obj_player.y, global.ball_spd);}
}

if (spawn_time &lt;= 0){
with(obj_ball){

//visible = true;
scome = false;
comeback = false;

}
ballspawn = false;
}
spawn_time -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_floorNasties">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (immune == false) {
draw_set_alpha(.02)
effect_create_above(ef_smoke, x, y, .5, c_orange);
draw_set_alpha(1)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Pushes player back 
 // seems to hit twice, lazy fix will change later
 
 
//speed = -4;
if (immune == false) {
health -= global.floor_dmg/45;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(snd_playerDam2){
audio_play_sound(snd_playerDam2, 9, false);}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(snd_lava){
audio_play_sound(snd_lava, 9, false);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_movingWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = -3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ball">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (ballspawn == false){
ballspawn = true;

spawn_time += 100;
immune = true;

with(obj_ball){
speed = 0;
//visible = false;
solid = false;
}

}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_arrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Pushes player back 
 // seems to hit twice, lazy fix will change later
 
 
//speed = -4;
health -= global.floor_dmg;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(snd_playerDam3){
audio_play_sound(snd_playerDam3, 9, false);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_monster">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_player.health -= global.broken_wall_dmg /3;
speed = -4;
//show_debug_message("Damage due to broken wall");
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if !audio_is_playing(snd_playerDam3) {
audio_play_sound(snd_playerDam3, 9, false)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (skill_cd = false) {
 // Set counter to 0, works in reverse


if (current_skill == 0){
show_debug_message("No skill!");
exit;
}

//if (usePower == false) {

// Default room speed is 30
// So, 30 steps per second
// Use that for cooldownds

// ID: 1 -&gt; Pull back
if (current_skill == 1) {
obj_ballHP.color = c_green;
max_cd = 90; // 3 Seconds
with(obj_ball){
scome = false;
comeback = true;
move_towards_point(obj_player.x, obj_player.y, global.ball_spd+6);
obj_ballHP.color = c_white;
}
}

else if (current_skill == 2) {
max_cd = 210;
tempx = x;
tempy =y;
x = obj_ball.x;
y = obj_ball.y;
obj_ball.x = tempx;
obj_ball.y = tempy;
}

else if (current_skill == 3) {
max_cd = 450; // 12 Seconds
move_Ball = true;
move_Ball_time += 100;
obj_ballHP.color = c_yellow;
}

cd_clock = max_cd;
skill_cd = true;


// End SKill
}
//}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>15,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
